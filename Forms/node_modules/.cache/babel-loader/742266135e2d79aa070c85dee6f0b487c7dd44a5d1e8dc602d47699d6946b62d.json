{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport InputBlock from \"./InputBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = () => {\n  _s();\n  const [resetBoolean, setResetBoolean] = useState(false);\n  const [nameValue, setNameValue] = useState(undefined);\n  const [emailValue, setEmailValue] = useState(undefined);\n  const [surnameValue, setSurnameValue] = useState(undefined);\n  let formIsInvalid = nameValue === undefined || surnameValue === undefined || emailValue === undefined;\n  const getNameValue = e => {\n    setNameValue(e);\n  };\n  const getSurnameValue = e => {\n    setSurnameValue(e);\n  };\n  const getEmailValue = e => {\n    setEmailValue(E);\n  };\n  const resetBooleanHandler = () => {\n    setResetBoolean(false);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (formIsInvalid) return;\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue\n    };\n    console.log(`Form subbmited with this particular data:\n      Name: ${data.name}\n      Surname: ${data.surname}\n      E-mail: ${data.email}`);\n    setResetBoolean(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: nameValue => nameValue.trim() !== \"\",\n        label: \"First name\",\n        type: \"text\",\n        id: \"name\",\n        errorText: \"Name must not be empty.\",\n        getValue: getNameValue,\n        resetValue: resetBoolean,\n        resetResetBoolean: resetBooleanHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: surnameValue => surnameValue.trim() !== \"\",\n        label: \"Surname\",\n        type: \"text\",\n        id: \"surname\",\n        errorText: \"Surname must not be empty.\",\n        getValue: getSurnameValue,\n        resetValue: resetBoolean,\n        resetResetBoolean: resetBooleanHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n      validationFunction: emailValue => {\n        const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n        const emailIsValid = regEx.test(emailValue);\n        return emailIsValid;\n      },\n      label: \"E-mail address\",\n      type: \"email\",\n      id: \"email\",\n      errorText: \"Please enter a valid e-mail address.\",\n      getValue: getEmailValue,\n      resetValue: resetBoolean,\n      resetResetBoolean: resetBooleanHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: formIsInvalid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"7GGp/U5zT5wdmlNc3hJH0sg0jYc=\");\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","InputBlock","jsxDEV","_jsxDEV","BasicForm","_s","resetBoolean","setResetBoolean","nameValue","setNameValue","undefined","emailValue","setEmailValue","surnameValue","setSurnameValue","formIsInvalid","getNameValue","e","getSurnameValue","getEmailValue","E","resetBooleanHandler","submitHandler","preventDefault","data","name","surname","email","console","log","method","onSubmit","children","className","validationFunction","trim","label","type","id","errorText","getValue","resetValue","resetResetBoolean","fileName","_jsxFileName","lineNumber","columnNumber","regEx","RegExp","emailIsValid","test","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/BasicForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport InputBlock from \"./InputBlock\";\n\nconst BasicForm = () => {\n  const [resetBoolean, setResetBoolean] = useState(false);\n  const [nameValue, setNameValue] = useState(undefined);\n  const [emailValue, setEmailValue] = useState(undefined);\n  const [surnameValue, setSurnameValue] = useState(undefined);\n\n  let formIsInvalid =\n    nameValue === undefined ||\n    surnameValue === undefined ||\n    emailValue === undefined;\n\n  const getNameValue = (e) => {\n    setNameValue(e);\n  };\n\n  const getSurnameValue = (e) => {\n    setSurnameValue(e);\n  };\n\n  const getEmailValue = (e) => {\n    setEmailValue(E);\n  };\n\n  const resetBooleanHandler = () => {\n    setResetBoolean(false);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (formIsInvalid) return;\n\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue,\n    };\n\n    console.log(`Form subbmited with this particular data:\n      Name: ${data.name}\n      Surname: ${data.surname}\n      E-mail: ${data.email}`);\n\n    setResetBoolean(true);\n  };\n\n  return (\n    <form method=\"post\" onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <InputBlock\n          validationFunction={(nameValue) => nameValue.trim() !== \"\"}\n          label=\"First name\"\n          type=\"text\"\n          id=\"name\"\n          errorText={\"Name must not be empty.\"}\n          getValue={getNameValue}\n          resetValue={resetBoolean}\n          resetResetBoolean={resetBooleanHandler}\n        />\n\n        <InputBlock\n          validationFunction={(surnameValue) => surnameValue.trim() !== \"\"}\n          label=\"Surname\"\n          type=\"text\"\n          id=\"surname\"\n          errorText={\"Surname must not be empty.\"}\n          getValue={getSurnameValue}\n          resetValue={resetBoolean}\n          resetResetBoolean={resetBooleanHandler}\n        />\n      </div>\n      <InputBlock\n        validationFunction={(emailValue) => {\n          const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n\n          const emailIsValid = regEx.test(emailValue);\n\n          return emailIsValid;\n        }}\n        label=\"E-mail address\"\n        type=\"email\"\n        id=\"email\"\n        errorText={\"Please enter a valid e-mail address.\"}\n        getValue={getEmailValue}\n        resetValue={resetBoolean}\n        resetResetBoolean={resetBooleanHandler}\n      />\n\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={formIsInvalid}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}