{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport InputBlock from \"./InputBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = () => {\n  _s();\n  const [resetBoolean, setResetBoolean] = useState(false);\n  let nameValue,\n    surnameValue,\n    emailValue,\n    formIsValid = nameValue === undefined || surnameValue === undefined || emailValue === undefined;\n  const getNameValue = e => {\n    nameValue = e;\n  };\n  const getSurnameValue = e => {\n    surnameValue = e;\n  };\n  const getEmailValue = e => {\n    emailValue = e;\n  };\n  const resetBooleanHandler = () => {\n    setResetBoolean(false);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (formIsValid) return;\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue\n    };\n    console.log(`Form subbmited with this particular data:\n      Name: ${data.name}\n      Surname: ${data.surname}\n      E-mail: ${data.email}`);\n    setResetBoolean(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: nameValue => nameValue.trim() !== \"\",\n        label: \"First name\",\n        type: \"text\",\n        id: \"name\",\n        errorText: \"Name must not be empty.\",\n        getValue: getNameValue,\n        resetValue: resetBoolean,\n        resetResetBoolean: resetBooleanHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: surnameValue => surnameValue.trim() !== \"\",\n        label: \"Surname\",\n        type: \"text\",\n        id: \"surname\",\n        errorText: \"Surname must not be empty.\",\n        getValue: getSurnameValue,\n        resetValue: resetBoolean,\n        resetResetBoolean: resetBooleanHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n      validationFunction: emailValue => {\n        const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n        const emailIsValid = regEx.test(emailValue);\n        return emailIsValid;\n      },\n      label: \"E-mail address\",\n      type: \"email\",\n      id: \"email\",\n      errorText: \"Please enter a valid e-mail address.\",\n      getValue: getEmailValue,\n      resetValue: resetBoolean,\n      resetResetBoolean: resetBooleanHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"N8uLJqgICqJf3MLdvgPZN8qTbrU=\");\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","InputBlock","jsxDEV","_jsxDEV","BasicForm","_s","resetBoolean","setResetBoolean","nameValue","surnameValue","emailValue","formIsValid","undefined","getNameValue","e","getSurnameValue","getEmailValue","resetBooleanHandler","submitHandler","preventDefault","data","name","surname","email","console","log","method","onSubmit","children","className","validationFunction","trim","label","type","id","errorText","getValue","resetValue","resetResetBoolean","fileName","_jsxFileName","lineNumber","columnNumber","regEx","RegExp","emailIsValid","test","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/BasicForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport InputBlock from \"./InputBlock\";\n\nconst BasicForm = () => {\n  const [resetBoolean, setResetBoolean] = useState(false);\n\n  let nameValue,\n    surnameValue,\n    emailValue,\n    formIsValid =\n      nameValue === undefined ||\n      surnameValue === undefined ||\n      emailValue === undefined;\n\n  const getNameValue = (e) => {\n    nameValue = e;\n  };\n\n  const getSurnameValue = (e) => {\n    surnameValue = e;\n  };\n\n  const getEmailValue = (e) => {\n    emailValue = e;\n  };\n\n  const resetBooleanHandler = () => {\n    setResetBoolean(false);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (formIsValid) return;\n\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue,\n    };\n\n    console.log(`Form subbmited with this particular data:\n      Name: ${data.name}\n      Surname: ${data.surname}\n      E-mail: ${data.email}`);\n\n    setResetBoolean(true);\n  };\n\n  return (\n    <form method=\"post\" onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <InputBlock\n          validationFunction={(nameValue) => nameValue.trim() !== \"\"}\n          label=\"First name\"\n          type=\"text\"\n          id=\"name\"\n          errorText={\"Name must not be empty.\"}\n          getValue={getNameValue}\n          resetValue={resetBoolean}\n          resetResetBoolean={resetBooleanHandler}\n        />\n\n        <InputBlock\n          validationFunction={(surnameValue) => surnameValue.trim() !== \"\"}\n          label=\"Surname\"\n          type=\"text\"\n          id=\"surname\"\n          errorText={\"Surname must not be empty.\"}\n          getValue={getSurnameValue}\n          resetValue={resetBoolean}\n          resetResetBoolean={resetBooleanHandler}\n        />\n      </div>\n      <InputBlock\n        validationFunction={(emailValue) => {\n          const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n\n          const emailIsValid = regEx.test(emailValue);\n\n          return emailIsValid;\n        }}\n        label=\"E-mail address\"\n        type=\"email\"\n        id=\"email\"\n        errorText={\"Please enter a valid e-mail address.\"}\n        getValue={getEmailValue}\n        resetValue={resetBoolean}\n        resetResetBoolean={resetBooleanHandler}\n      />\n\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}