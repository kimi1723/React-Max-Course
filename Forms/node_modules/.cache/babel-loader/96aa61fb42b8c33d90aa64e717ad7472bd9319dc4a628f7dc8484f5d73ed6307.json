{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport InputBlock from \"./Input\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = () => {\n  _s();\n  let nameValue, surnameValue, emailValue;\n  const {\n    reset\n  } = useInput();\n  const submitHandler = e => {\n    e.preventDefault();\n    if (nameValue === undefined || surnameValue === undefined || emailValue === undefined) return;\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue\n    };\n    console.log(`Form subbmited with this particular data:\n    Name: ${data.name}\n    Surname: ${data.surname}\n    E-mail: ${data.email}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: nameValue => nameValue.trim() !== \"\",\n        label: \"First name\",\n        type: \"text\",\n        id: \"name\",\n        errorText: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n        validationFunction: surnameValue => surnameValue.trim() !== \"\",\n        label: \"Surname\",\n        type: \"text\",\n        id: \"surname\",\n        errorText: \"Surname must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n      validationFunction: emailValue => {\n        const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n        const emailIsValid = regEx.test(emailValue);\n        return emailIsValid;\n      },\n      label: \"E-mail address\",\n      type: \"email\",\n      id: \"email\",\n      errorText: \"Please enter a valid e-mail address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"LkAaH7LYBHzYsJ154KUPYb3WAi4=\", false, function () {\n  return [useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["InputBlock","useInput","jsxDEV","_jsxDEV","BasicForm","_s","nameValue","surnameValue","emailValue","reset","submitHandler","e","preventDefault","undefined","data","name","surname","email","console","log","onSubmit","children","className","validationFunction","trim","label","type","id","errorText","fileName","_jsxFileName","lineNumber","columnNumber","regEx","RegExp","emailIsValid","test","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/BasicForm.js"],"sourcesContent":["import InputBlock from \"./Input\";\nimport useInput from \"../hooks/use-input\";\n\nconst BasicForm = () => {\n  let nameValue, surnameValue, emailValue;\n  const { reset } = useInput();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (\n      nameValue === undefined ||\n      surnameValue === undefined ||\n      emailValue === undefined\n    )\n      return;\n\n    const data = {\n      name: nameValue,\n      surname: surnameValue,\n      email: emailValue,\n    };\n\n    console.log(`Form subbmited with this particular data:\n    Name: ${data.name}\n    Surname: ${data.surname}\n    E-mail: ${data.email}`);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <InputBlock\n          validationFunction={(nameValue) => nameValue.trim() !== \"\"}\n          label=\"First name\"\n          type=\"text\"\n          id=\"name\"\n          errorText={\"Name must not be empty.\"}\n        />\n\n        <InputBlock\n          validationFunction={(surnameValue) => surnameValue.trim() !== \"\"}\n          label=\"Surname\"\n          type=\"text\"\n          id=\"surname\"\n          errorText={\"Surname must not be empty.\"}\n        />\n      </div>\n      <InputBlock\n        validationFunction={(emailValue) => {\n          const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n\n          const emailIsValid = regEx.test(emailValue);\n\n          return emailIsValid;\n        }}\n        label=\"E-mail address\"\n        type=\"email\"\n        id=\"email\"\n        errorText={\"Please enter a valid e-mail address.\"}\n      />\n\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,SAAS;AAChC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,IAAIC,SAAS,EAAEC,YAAY,EAAEC,UAAU;EACvC,MAAM;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE5B,MAAMS,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IACEN,SAAS,KAAKO,SAAS,IACvBN,YAAY,KAAKM,SAAS,IAC1BL,UAAU,KAAKK,SAAS,EAExB;IAEF,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAET,SAAS;MACfU,OAAO,EAAET,YAAY;MACrBU,KAAK,EAAET;IACT,CAAC;IAEDU,OAAO,CAACC,GAAG,CAAE;AACjB,YAAYL,IAAI,CAACC,IAAK;AACtB,eAAeD,IAAI,CAACE,OAAQ;AAC5B,cAAcF,IAAI,CAACG,KAAM,EAAC,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAMiB,QAAQ,EAAEV,aAAc;IAAAW,QAAA,gBAC5BlB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BlB,OAAA,CAACH,UAAU;QACTuB,kBAAkB,EAAGjB,SAAS,IAAKA,SAAS,CAACkB,IAAI,CAAC,CAAC,KAAK,EAAG;QAC3DC,KAAK,EAAC,YAAY;QAClBC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,SAAS,EAAE;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAEF7B,OAAA,CAACH,UAAU;QACTuB,kBAAkB,EAAGhB,YAAY,IAAKA,YAAY,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAG;QACjEC,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,SAAS;QACZC,SAAS,EAAE;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA,CAACH,UAAU;MACTuB,kBAAkB,EAAGf,UAAU,IAAK;QAClC,MAAMyB,KAAK,GAAG,IAAIC,MAAM,CAAC,mCAAmC,CAAC;QAE7D,MAAMC,YAAY,GAAGF,KAAK,CAACG,IAAI,CAAC5B,UAAU,CAAC;QAE3C,OAAO2B,YAAY;MACrB,CAAE;MACFV,KAAK,EAAC,gBAAgB;MACtBC,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,OAAO;MACVC,SAAS,EAAE;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEF7B,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BlB,OAAA;QAAAkB,QAAA,EAAQ;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAhEID,SAAS;EAAA,QAEKH,QAAQ;AAAA;AAAAoC,EAAA,GAFtBjC,SAAS;AAkEf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}