{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\EmailInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailInput = ({\n  type,\n  id,\n  isInvalid\n}) => {\n  _s();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n  const enteredEmailIsValid = regEx.test(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    setEnteredEmailTouched(true);\n    isInvalid(emailInputIsInvalid);\n  };\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n    isInvalid(!enteredEmailIsValid);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      id: id,\n      onChange: emailInputChangeHandler,\n      onBlur: emailInputBlurHandler,\n      value: enteredEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"E-mail must be valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EmailInput, \"kcwHtehIndFOazlo8H9cm8z2nBM=\");\n_c = EmailInput;\nexport default EmailInput;\nvar _c;\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailInput","type","id","isInvalid","_s","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","regEx","RegExp","enteredEmailIsValid","test","emailInputIsInvalid","emailInputChangeHandler","e","target","value","emailInputBlurHandler","children","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/EmailInput.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst EmailInput = ({ type, id, isInvalid }) => {\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\r\n\r\n  const enteredEmailIsValid = regEx.test(enteredEmail);\r\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  const emailInputChangeHandler = (e) => {\r\n    setEnteredEmail(e.target.value);\r\n    setEnteredEmailTouched(true);\r\n    isInvalid(emailInputIsInvalid);\r\n  };\r\n\r\n  const emailInputBlurHandler = () => {\r\n    setEnteredEmailTouched(true);\r\n    isInvalid(!enteredEmailIsValid);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        id={id}\r\n        onChange={emailInputChangeHandler}\r\n        onBlur={emailInputBlurHandler}\r\n        value={enteredEmail}\r\n      />\r\n      {emailInputIsInvalid && (\r\n        <p className=\"error-text\">E-mail must be valid.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMc,KAAK,GAAG,IAAIC,MAAM,CAAC,mCAAmC,CAAC;EAE7D,MAAMC,mBAAmB,GAAGF,KAAK,CAACG,IAAI,CAACP,YAAY,CAAC;EACpD,MAAMQ,mBAAmB,GAAG,CAACF,mBAAmB,IAAIJ,mBAAmB;EAEvE,MAAMO,uBAAuB,GAAIC,CAAC,IAAK;IACrCT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BT,sBAAsB,CAAC,IAAI,CAAC;IAC5BL,SAAS,CAACU,mBAAmB,CAAC;EAChC,CAAC;EAED,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAClCV,sBAAsB,CAAC,IAAI,CAAC;IAC5BL,SAAS,CAAC,CAACQ,mBAAmB,CAAC;EACjC,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MACEI,IAAI,EAAEA,IAAK;MACXC,EAAE,EAAEA,EAAG;MACPkB,QAAQ,EAAEN,uBAAwB;MAClCO,MAAM,EAAEH,qBAAsB;MAC9BD,KAAK,EAAEZ;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACDZ,mBAAmB,iBAClBhB,OAAA;MAAG6B,SAAS,EAAC,YAAY;MAAAP,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD;EAAA,eACD,CAAC;AAEP,CAAC;AAACrB,EAAA,CAlCIJ,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}