{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\SurnameInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SurnameInput = ({\n  type,\n  id,\n  isInvalid,\n  value,\n  resetBoolean\n}) => {\n  _s();\n  const [enteredSurname, setEnteredSurname] = useState(\"\");\n  const [enteredSurnameTouched, setEnteredSurnameTouched] = useState(false);\n  const enteredSurnameIsValid = enteredSurname.trim() !== \"\";\n  const surnameInputIsInvalid = !enteredSurnameIsValid && enteredSurnameTouched;\n  useEffect(() => {\n    if (enteredSurnameIsValid && enteredSurnameTouched) {\n      value(enteredSurname);\n    }\n    if (resetBoolean === true) {\n      setEnteredSurname(\"\");\n    }\n  });\n  const surnameInputChangeHandler = e => {\n    setEnteredSurname(e.target.value);\n    setEnteredSurnameTouched(true);\n    isInvalid(e.target.value.trim() === \"\");\n  };\n  const surnameInputBlurHandler = () => {\n    setEnteredSurnameTouched(true);\n    isInvalid(!enteredSurnameIsValid);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      id: id,\n      onBlur: surnameInputBlurHandler,\n      onChange: surnameInputChangeHandler,\n      value: enteredSurname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), surnameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Surname must not be empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SurnameInput, \"tBEcpRD4EgLEd5x00SAbZu+U/yg=\");\n_c = SurnameInput;\nexport default SurnameInput;\nvar _c;\n$RefreshReg$(_c, \"SurnameInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SurnameInput","type","id","isInvalid","value","resetBoolean","_s","enteredSurname","setEnteredSurname","enteredSurnameTouched","setEnteredSurnameTouched","enteredSurnameIsValid","trim","surnameInputIsInvalid","surnameInputChangeHandler","e","target","surnameInputBlurHandler","children","onBlur","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/SurnameInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst SurnameInput = ({ type, id, isInvalid, value, resetBoolean }) => {\r\n  const [enteredSurname, setEnteredSurname] = useState(\"\");\r\n  const [enteredSurnameTouched, setEnteredSurnameTouched] = useState(false);\r\n\r\n  const enteredSurnameIsValid = enteredSurname.trim() !== \"\";\r\n  const surnameInputIsInvalid = !enteredSurnameIsValid && enteredSurnameTouched;\r\n\r\n  useEffect(() => {\r\n    if (enteredSurnameIsValid && enteredSurnameTouched) {\r\n      value(enteredSurname);\r\n    }\r\n\r\n    if (resetBoolean === true) {\r\n      setEnteredSurname(\"\");\r\n    }\r\n  });\r\n\r\n  const surnameInputChangeHandler = (e) => {\r\n    setEnteredSurname(e.target.value);\r\n    setEnteredSurnameTouched(true);\r\n    isInvalid(e.target.value.trim() === \"\");\r\n  };\r\n\r\n  const surnameInputBlurHandler = () => {\r\n    setEnteredSurnameTouched(true);\r\n    isInvalid(!enteredSurnameIsValid);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        id={id}\r\n        onBlur={surnameInputBlurHandler}\r\n        onChange={surnameInputChangeHandler}\r\n        value={enteredSurname}\r\n      />\r\n      {surnameInputIsInvalid && (\r\n        <p className=\"error-text\">Surname must not be empty.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurnameInput;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzE,MAAMiB,qBAAqB,GAAGJ,cAAc,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE;EAC1D,MAAMC,qBAAqB,GAAG,CAACF,qBAAqB,IAAIF,qBAAqB;EAE7Ed,SAAS,CAAC,MAAM;IACd,IAAIgB,qBAAqB,IAAIF,qBAAqB,EAAE;MAClDL,KAAK,CAACG,cAAc,CAAC;IACvB;IAEA,IAAIF,YAAY,KAAK,IAAI,EAAE;MACzBG,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC,CAAC;EAEF,MAAMM,yBAAyB,GAAIC,CAAC,IAAK;IACvCP,iBAAiB,CAACO,CAAC,CAACC,MAAM,CAACZ,KAAK,CAAC;IACjCM,wBAAwB,CAAC,IAAI,CAAC;IAC9BP,SAAS,CAACY,CAAC,CAACC,MAAM,CAACZ,KAAK,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EACzC,CAAC;EAED,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;IACpCP,wBAAwB,CAAC,IAAI,CAAC;IAC9BP,SAAS,CAAC,CAACQ,qBAAqB,CAAC;EACnC,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MACEI,IAAI,EAAEA,IAAK;MACXC,EAAE,EAAEA,EAAG;MACPiB,MAAM,EAAEF,uBAAwB;MAChCG,QAAQ,EAAEN,yBAA0B;MACpCV,KAAK,EAAEG;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACDX,qBAAqB,iBACpBhB,OAAA;MAAG4B,SAAS,EAAC,YAAY;MAAAP,QAAA,EAAC;IAA0B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxD;EAAA,eACD,CAAC;AAEP,CAAC;AAAClB,EAAA,CA1CIN,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}