{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk S\\u0105siadek\\\\Documents\\\\GitHub\\\\React-Max-Course\\\\Forms\\\\src\\\\components\\\\EmailInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailInput = ({\n  type,\n  id,\n  isInvalid,\n  value\n}) => {\n  _s();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\n  const enteredEmailIsValid = regEx.test(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  useEffect(() => {\n    isInvalid(emailInputIsInvalid);\n    if (enteredEmailIsValid && enteredEmailTouched) {\n      console.log(\"e\");\n    }\n  });\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    setEnteredEmailTouched(true);\n  };\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n    isInvalid(emailInputIsInvalid);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      id: id,\n      onChange: emailInputChangeHandler,\n      onBlur: emailInputBlurHandler,\n      value: enteredEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"E-mail must be valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EmailInput, \"SHsR7c+Nr2v3e9Dgv1V6Fh7jb48=\");\n_c = EmailInput;\nexport default EmailInput;\nvar _c;\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailInput","type","id","isInvalid","value","_s","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","regEx","RegExp","enteredEmailIsValid","test","emailInputIsInvalid","console","log","emailInputChangeHandler","e","target","emailInputBlurHandler","children","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Patryk SÄ…siadek/Documents/GitHub/React-Max-Course/Forms/src/components/EmailInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst EmailInput = ({ type, id, isInvalid, value }) => {\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const regEx = new RegExp(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/gi);\r\n\r\n  const enteredEmailIsValid = regEx.test(enteredEmail);\r\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  useEffect(() => {\r\n    isInvalid(emailInputIsInvalid);\r\n    if (enteredEmailIsValid && enteredEmailTouched) {\r\n      console.log(\"e\");\r\n    }\r\n  });\r\n\r\n  const emailInputChangeHandler = (e) => {\r\n    setEnteredEmail(e.target.value);\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const emailInputBlurHandler = () => {\r\n    setEnteredEmailTouched(true);\r\n    isInvalid(emailInputIsInvalid);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        id={id}\r\n        onChange={emailInputChangeHandler}\r\n        onBlur={emailInputBlurHandler}\r\n        value={enteredEmail}\r\n      />\r\n      {emailInputIsInvalid && (\r\n        <p className=\"error-text\">E-mail must be valid.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMgB,KAAK,GAAG,IAAIC,MAAM,CAAC,mCAAmC,CAAC;EAE7D,MAAMC,mBAAmB,GAAGF,KAAK,CAACG,IAAI,CAACP,YAAY,CAAC;EACpD,MAAMQ,mBAAmB,GAAG,CAACF,mBAAmB,IAAIJ,mBAAmB;EAEvEb,SAAS,CAAC,MAAM;IACdQ,SAAS,CAACW,mBAAmB,CAAC;IAC9B,IAAIF,mBAAmB,IAAIJ,mBAAmB,EAAE;MAC9CO,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,uBAAuB,GAAIC,CAAC,IAAK;IACrCX,eAAe,CAACW,CAAC,CAACC,MAAM,CAACf,KAAK,CAAC;IAC/BK,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;IAClCX,sBAAsB,CAAC,IAAI,CAAC;IAC5BN,SAAS,CAACW,mBAAmB,CAAC;EAChC,CAAC;EAED,oBACEjB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MACEI,IAAI,EAAEA,IAAK;MACXC,EAAE,EAAEA,EAAG;MACPoB,QAAQ,EAAEL,uBAAwB;MAClCM,MAAM,EAAEH,qBAAsB;MAC9BhB,KAAK,EAAEE;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACDb,mBAAmB,iBAClBjB,OAAA;MAAG+B,SAAS,EAAC,YAAY;MAAAP,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD;EAAA,eACD,CAAC;AAEP,CAAC;AAACtB,EAAA,CAxCIL,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}