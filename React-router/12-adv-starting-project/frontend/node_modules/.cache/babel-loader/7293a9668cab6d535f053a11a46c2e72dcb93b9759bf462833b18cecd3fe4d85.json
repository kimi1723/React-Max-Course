{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Max Course\\\\React-router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n// export const action = async ({ req, params }) => {\n// \tconsole.log(req);\n// \tconst data = await req.formData();\n\n// \tconst eventData = {\n// \t\ttitle: data.get('title'),\n// \t\timage: data.get('image'),\n// \t\tdate: data.get('date'),\n// \t\tdescription: data.get('description'),\n// \t};\n\n// \tconst res = fetch('http://localhost:8080/events', {\n// \t\tmethod: 'POST',\n// \t\theaders: {\n// \t\t\t'Content-Type': 'application/json',\n// \t\t},\n// \t\tbody: JSON.stringify(eventData),\n// \t});\n\n// \tif (!res.ok) {\n// \t\tthrow json({ message: 'Could not save event.' }, { status: 500 });\n// \t}\n\n// \t// return res;\n// };\n\n// export async function action({ request, params }) {\n// \tconsole.log(request);\n// \tconst data = await request.formData();\n\n// \tconst eventData = {\n// \t\ttitle: data.get('title'),\n// \t\timage: data.get('image'),\n// \t\tdate: data.get('date'),\n// \t\tdescription: data.get('description'),\n// \t};\n\n// \tconst response = await fetch('http://localhost:8080/events', {\n// \t\tmethod: 'POST',\n// \t\theaders: {\n// \t\t\t'Content-Type': 'application/json',\n// \t\t},\n// \t\tbody: JSON.stringify(eventData),\n// \t});\n\n// \tif (!response.ok) {\n// \t\tthrow json({ message: 'Could not save event.' }, { status: 500 });\n// \t}\n\n// \t// return redirect('/events');\n// }\n_c = NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/React Max Course/React-router/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from 'react-router-dom';\r\n\r\nimport EventForm from '../components/EventForm';\r\n\r\nexport const NewEventPage = () => {\r\n\treturn <EventForm />;\r\n};\r\n\r\n// export const action = async ({ req, params }) => {\r\n// \tconsole.log(req);\r\n// \tconst data = await req.formData();\r\n\r\n// \tconst eventData = {\r\n// \t\ttitle: data.get('title'),\r\n// \t\timage: data.get('image'),\r\n// \t\tdate: data.get('date'),\r\n// \t\tdescription: data.get('description'),\r\n// \t};\r\n\r\n// \tconst res = fetch('http://localhost:8080/events', {\r\n// \t\tmethod: 'POST',\r\n// \t\theaders: {\r\n// \t\t\t'Content-Type': 'application/json',\r\n// \t\t},\r\n// \t\tbody: JSON.stringify(eventData),\r\n// \t});\r\n\r\n// \tif (!res.ok) {\r\n// \t\tthrow json({ message: 'Could not save event.' }, { status: 500 });\r\n// \t}\r\n\r\n// \t// return res;\r\n// };\r\n\r\n// export async function action({ request, params }) {\r\n// \tconsole.log(request);\r\n// \tconst data = await request.formData();\r\n\r\n// \tconst eventData = {\r\n// \t\ttitle: data.get('title'),\r\n// \t\timage: data.get('image'),\r\n// \t\tdate: data.get('date'),\r\n// \t\tdescription: data.get('description'),\r\n// \t};\r\n\r\n// \tconst response = await fetch('http://localhost:8080/events', {\r\n// \t\tmethod: 'POST',\r\n// \t\theaders: {\r\n// \t\t\t'Content-Type': 'application/json',\r\n// \t\t},\r\n// \t\tbody: JSON.stringify(eventData),\r\n// \t});\r\n\r\n// \tif (!response.ok) {\r\n// \t\tthrow json({ message: 'Could not save event.' }, { status: 500 });\r\n// \t}\r\n\r\n// \t// return redirect('/events');\r\n// }\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACjC,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAAC,EAAA,GAtDaL,YAAY;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}