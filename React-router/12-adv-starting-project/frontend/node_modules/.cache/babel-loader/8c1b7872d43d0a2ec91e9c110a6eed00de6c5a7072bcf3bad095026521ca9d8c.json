{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Max Course\\\\React-router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { Root } from './pages/Root';\nimport { HomePage } from './pages/Home';\nimport { EventsPage } from './pages/Events';\nimport { EventDetailPage } from './pages/EventDetail';\nimport { NewEventPage } from './pages/NewEvent';\nimport { EditEventPage } from './pages/EditEvent';\nimport { EventRoot } from './pages/EventRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this),\n    children: [{\n      path: '',\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this)\n    }, {\n      path: ':id',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this)\n    }, {\n      path: ':id/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Root","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","EventRoot","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","App","_c","$RefreshReg$"],"sources":["F:/React Max Course/React-router/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\r\n// 4. Add properly working links to the MainNavigation\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\n\r\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\n\r\nimport { Root } from './pages/Root';\r\nimport { HomePage } from './pages/Home';\r\nimport { EventsPage } from './pages/Events';\r\nimport { EventDetailPage } from './pages/EventDetail';\r\nimport { NewEventPage } from './pages/NewEvent';\r\nimport { EditEventPage } from './pages/EditEvent';\r\nimport { EventRoot } from './pages/EventRoot';\r\n\r\nconst router = createBrowserRouter([\r\n\t{\r\n\t\tpath: '/',\r\n\t\telement: <Root />,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tindex: true,\r\n\t\t\t\telement: <HomePage />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: '/events',\r\n\t\t\t\telement: <EventRoot />,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{ path: '', element: <EventsPage /> },\r\n\t\t\t\t\t{ path: ':id', element: <EventDetailPage /> },\r\n\t\t\t\t\t{ path: ':id/edit', element: <EditEventPage /> },\r\n\t\t\t\t\t{ path: 'new', element: <NewEventPage /> },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n]);\r\n\r\nfunction App() {\r\n\treturn <RouterProvider router={router}></RouterProvider>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AAEtE,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CAClC;EACCY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACR,IAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,QAAQ,EAAE,CACT;IACCC,KAAK,EAAE,IAAI;IACXN,OAAO,eAAEH,OAAA,CAACP,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrB,CAAC,EACD;IACCL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEH,OAAA,CAACF,SAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACtBC,QAAQ,EAAE,CACT;MAAEN,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAEH,OAAA,CAACN,UAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACrC;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACL,eAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC7C;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACH,aAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAChD;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACJ,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAE5C,CAAC;AAEH,CAAC,CACD,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACd,oBAAOV,OAAA,CAACT,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AACzD;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}