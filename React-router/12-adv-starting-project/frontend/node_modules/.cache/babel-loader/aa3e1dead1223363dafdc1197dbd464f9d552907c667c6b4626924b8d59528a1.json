{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Max Course\\\\React-router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = NewEventPage;\nexport const action = async ({\n  request,\n  params\n}) => {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const res = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (res.status === 422) {\n    return res;\n  }\n  if (!res.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","res","fetch","headers","body","JSON","stringify","status","ok","json","message","redirect","$RefreshReg$"],"sources":["F:/React Max Course/React-router/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["\r\nimport EventForm from '../components/EventForm';\r\n\r\nexport const NewEventPage = () => {\r\n\treturn <EventForm method=\"post\" />;\r\n};\r\n\r\nexport const action = async ({ request, params }) => {\r\n\tconst data = await request.formData();\r\n\r\n\tconst eventData = {\r\n\t\ttitle: data.get('title'),\r\n\t\timage: data.get('image'),\r\n\t\tdate: data.get('date'),\r\n\t\tdescription: data.get('description'),\r\n\t};\r\n\r\n\tconst res = await fetch('http://localhost:8080/events', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(eventData),\r\n\t});\r\n\r\n\tif (res.status === 422) {\r\n\t\treturn res;\r\n\t}\r\n\r\n\tif (!res.ok) {\r\n\t\tthrow json({ message: 'Could not save event.' }, { status: 500 });\r\n\t}\r\n\r\n\treturn redirect('/events');\r\n};\r\n"],"mappings":";AACA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACjC,oBAAOD,OAAA,CAACF,SAAS;IAACI,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAACC,EAAA,GAFWN,YAAY;AAIzB,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACpD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EAED,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACvDlB,MAAM,EAAE,MAAM;IACdmB,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAC/B,CAAC,CAAC;EAEF,IAAIM,GAAG,CAACM,MAAM,KAAK,GAAG,EAAE;IACvB,OAAON,GAAG;EACX;EAEA,IAAI,CAACA,GAAG,CAACO,EAAE,EAAE;IACZ,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEH,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;EAEA,OAAOI,QAAQ,CAAC,SAAS,CAAC;AAC3B,CAAC;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}